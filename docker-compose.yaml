version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--ping"
      - "--log.level=DEBUG"
      - "--entrypoints.whoami.address=:5000"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"

    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 3s
      retries
  whoami:
    image: traefik/whoami
    expose:
      - "5000"
    entrypoint: ["/whoami", "--port", "5000"]  
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS"
      - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.testheader.headers.addvaryheader=true"
      - "traefik.http.routers.whoami.middlewares=testheader"
      - "traefik.http.routers.whoami.rule=Host(`localhost`)"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/1`)"
      - "traefik.http.routers.whoami.entrypoints=whoami"
    depends_on:
      traefik:
        condition: service_healthy
  web:
    image: web:latest
    labels:
      - "traefik.http.routers.web.rule=Host(`localhost`)"
